{"version":3,"sources":["webpack.config.js"],"names":["fs","require","isWsl","path","webpack","resolve","PnpWebpackPlugin","HtmlWebpackPlugin","CaseSensitivePathsPlugin","InlineChunkHtmlPlugin","TerserPlugin","MiniCssExtractPlugin","OptimizeCSSAssetsPlugin","safePostCssParser","ManifestPlugin","InterpolateHtmlPlugin","WorkboxWebpackPlugin","WatchMissingNodeModulesPlugin","ModuleScopePlugin","getCSSModuleLocalIdent","paths","modules","getClientEnvironment","ModuleNotFoundPlugin","ForkTsCheckerWebpackPlugin","typescriptFormatter","getPackageJson","eslint","postcssNormalize","appPackageJson","shouldUseSourceMap","shouldInlineRuntimeChunk","process","env","INLINE_RUNTIME_CHUNK","imageInlineSizeLimit","parseInt","IMAGE_INLINE_SIZE_LIMIT","useTypeScript","existsSync","appTsConfig","cssRegex","cssModuleRegex","sassRegex","sassModuleRegex","version","name","license","repository","author","banner","url","replace","module","exports","webpackEnv","isEnvDevelopment","isEnvProduction","publicPath","servedPath","shouldUseRelativeAssetPaths","publicUrl","slice","getStyleLoaders","cssOptions","preProcessor","loaders","loader","options","ident","plugins","autoprefixer","flexbox","stage","sourceMap","filter","Boolean","push","mode","bail","devtool","entry","appLibIndexJs","appIndexJs","output","appBuild","undefined","pathinfo","filename","futureEmitAssets","chunkFilename","library","libraryTarget","umdNamedDefine","devtoolModuleFilenameTemplate","info","relative","appSrcLib","absoluteResourcePath","jsonpFunction","optimization","minimize","minimizer","terserOptions","parse","ecma","compress","warnings","comparisons","inline","mangle","safari10","keep_classnames","keep_fnames","comments","ascii_only","parallel","cache","BannerPlugin","entryOnly","cssProcessorOptions","parser","map","annotation","splitChunks","cacheGroups","runtimeChunk","appNodeModules","concat","additionalModulePaths","extensions","moduleFileExtensions","ext","includes","alias","appSrc","resolveLoader","moduleLoader","strictExportPresence","rules","requireEnsure","test","enforce","use","formatter","eslintPath","resolvePluginsRelativeTo","__dirname","include","oneOf","limit","customize","loaderMap","svg","ReactComponent","cacheDirectory","cacheCompression","compact","exclude","babelrc","configFile","presets","helpers","sourceMaps","importLoaders","sideEffects","getLocalIdent","ProvidePlugin","Object","assign","inject","template","appHtml","minify","removeComments","collapseWhitespace","removeRedundantAttributes","useShortDoctype","removeEmptyAttributes","removeStyleLinkTypeAttributes","keepClosingSlash","minifyJS","minifyCSS","minifyURLs","raw","appPath","DefinePlugin","stringified","HotModuleReplacementPlugin","IgnorePlugin","typescript","sync","basedir","async","useTypescriptIncrementalApi","checkSyntacticErrors","resolveModuleNameModule","versions","pnp","resolveTypeReferenceDirectiveModule","tsconfig","reportFiles","watch","silent","node","dgram","dns","http2","net","tls","child_process","performance"],"mappings":"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","sourcesContent":["'use strict';\r\n\r\nconst fs = require('fs');\r\nconst isWsl = require('is-wsl');\r\nconst path = require('path');\r\nconst webpack = require('webpack');\r\nconst resolve = require('resolve');\r\nconst PnpWebpackPlugin = require('pnp-webpack-plugin');\r\nconst HtmlWebpackPlugin = require('html-webpack-plugin');\r\nconst CaseSensitivePathsPlugin = require('case-sensitive-paths-webpack-plugin');\r\nconst InlineChunkHtmlPlugin = require('react-dev-utils/InlineChunkHtmlPlugin');\r\nconst TerserPlugin = require('terser-webpack-plugin');\r\nconst MiniCssExtractPlugin = require('mini-css-extract-plugin');\r\nconst OptimizeCSSAssetsPlugin = require('optimize-css-assets-webpack-plugin');\r\nconst safePostCssParser = require('postcss-safe-parser');\r\nconst ManifestPlugin = require('webpack-manifest-plugin');\r\nconst InterpolateHtmlPlugin = require('react-dev-utils/InterpolateHtmlPlugin');\r\nconst WorkboxWebpackPlugin = require('workbox-webpack-plugin');\r\nconst WatchMissingNodeModulesPlugin = require('react-dev-utils/WatchMissingNodeModulesPlugin');\r\nconst ModuleScopePlugin = require('react-dev-utils/ModuleScopePlugin');\r\nconst getCSSModuleLocalIdent = require('react-dev-utils/getCSSModuleLocalIdent');\r\nconst paths = require('./paths');\r\nconst modules = require('./modules');\r\nconst getClientEnvironment = require('./env');\r\nconst ModuleNotFoundPlugin = require('react-dev-utils/ModuleNotFoundPlugin');\r\nconst ForkTsCheckerWebpackPlugin = require('react-dev-utils/ForkTsCheckerWebpackPlugin');\r\nconst typescriptFormatter = require('react-dev-utils/typescriptFormatter');\r\nconst getPackageJson = require('./getPackageJson');\r\nconst eslint = require('eslint');\r\n\r\nconst postcssNormalize = require('postcss-normalize');\r\n\r\nconst appPackageJson = require(paths.appPackageJson);\r\n\r\n// Source maps are resource heavy and can cause out of memory issue for large source files.\r\n// const shouldUseSourceMap = process.env.GENERATE_SOURCEMAP !== 'false';\r\nconst shouldUseSourceMap = false;\r\n// Some apps do not need the benefits of saving a web request, so not inlining the chunk\r\n// makes for a smoother build process.\r\nconst shouldInlineRuntimeChunk = process.env.INLINE_RUNTIME_CHUNK !== 'false';\r\n\r\nconst imageInlineSizeLimit = parseInt(\r\n  process.env.IMAGE_INLINE_SIZE_LIMIT || '10000'\r\n);\r\n\r\n// Check if TypeScript is setup\r\nconst useTypeScript = fs.existsSync(paths.appTsConfig);\r\n\r\n// style files regexes\r\nconst cssRegex = /\\.css$/;\r\nconst cssModuleRegex = /\\.module\\.css$/;\r\nconst sassRegex = /\\.(scss|sass)$/;\r\nconst sassModuleRegex = /\\.module\\.(scss|sass)$/;\r\n\r\nconst {\r\n  version,\r\n  name,\r\n  license,\r\n  repository,\r\n  author,\r\n} = getPackageJson('version', 'name', 'license', 'repository', 'author');\r\n\r\nconst banner = `\r\n  ${name} v${version}\r\n  ${repository.url}\r\n\r\n  Copyright (c) ${author.replace(/ *\\<[^)]*\\> */g, \" \")}\r\n\r\n  This source code is licensed under the ${license} license found in the\r\n  LICENSE file in the root directory of this source tree.\r\n  `;\r\n\r\n// This is the production and development configuration.\r\n// It is focused on developer experience, fast rebuilds, and a minimal bundle.\r\nmodule.exports = function(webpackEnv) {\r\n  const isEnvDevelopment = webpackEnv === 'development';\r\n  const isEnvProduction = webpackEnv === 'production';\r\n\r\n  // Webpack uses `publicPath` to determine where the app is being served from.\r\n  // It requires a trailing slash, or the file assets will get an incorrect path.\r\n  // In development, we always serve from the root. This makes config easier.\r\n  const publicPath = isEnvProduction\r\n    ? paths.servedPath\r\n    : isEnvDevelopment && '/';\r\n  // Some apps do not use client-side routing with pushState.\r\n  // For these, \"homepage\" can be set to \".\" to enable relative asset paths.\r\n  const shouldUseRelativeAssetPaths = publicPath === './';\r\n\r\n  // `publicUrl` is just like `publicPath`, but we will provide it to our app\r\n  // as %PUBLIC_URL% in `index.html` and `process.env.PUBLIC_URL` in JavaScript.\r\n  // Omit trailing slash as %PUBLIC_URL%/xyz looks better than %PUBLIC_URL%xyz.\r\n  const publicUrl = isEnvProduction\r\n    ? publicPath.slice(0, -1)\r\n    : isEnvDevelopment && '';\r\n  // Get environment variables to inject into our app.\r\n  const env = getClientEnvironment(publicUrl);\r\n\r\n  // common function to get style loaders\r\n  const getStyleLoaders = (cssOptions, preProcessor) => {\r\n    const loaders = [\r\n      isEnvDevelopment && require.resolve('style-loader'),\r\n      isEnvProduction && {\r\n        loader: MiniCssExtractPlugin.loader,\r\n        options: shouldUseRelativeAssetPaths ? { publicPath: '../../' } : {},\r\n      },\r\n      {\r\n        loader: require.resolve('css-loader'),\r\n        options: cssOptions,\r\n      },\r\n      {\r\n        // Options for PostCSS as we reference these options twice\r\n        // Adds vendor prefixing based on your specified browser support in\r\n        // package.json\r\n        loader: require.resolve('postcss-loader'),\r\n        options: {\r\n          // Necessary for external CSS imports to work\r\n          // https://github.com/facebook/create-react-app/issues/2677\r\n          ident: 'postcss',\r\n          plugins: () => [\r\n            require('postcss-flexbugs-fixes'),\r\n            require('postcss-preset-env')({\r\n              autoprefixer: {\r\n                flexbox: 'no-2009',\r\n              },\r\n              stage: 3,\r\n            }),\r\n            // Adds PostCSS Normalize as the reset css with default options,\r\n            // so that it honors browserslist config in package.json\r\n            // which in turn let's users customize the target behavior as per their needs.\r\n            postcssNormalize(),\r\n          ],\r\n          sourceMap: isEnvProduction && shouldUseSourceMap,\r\n        },\r\n      },\r\n    ].filter(Boolean);\r\n    if (preProcessor) {\r\n      loaders.push(\r\n        {\r\n          loader: require.resolve('resolve-url-loader'),\r\n        options: {\r\n          sourceMap: isEnvProduction && shouldUseSourceMap,\r\n        },\r\n        },\r\n        {\r\n          loader: require.resolve(preProcessor),\r\n          options: {\r\n            sourceMap: true,\r\n          },\r\n    }\r\n      );\r\n    }\r\n    return loaders;\r\n  };\r\n\r\n  return {\r\n    mode: isEnvProduction ? 'production' : isEnvDevelopment && 'development',\r\n    // Stop compilation early in production\r\n    bail: isEnvProduction,\r\n    devtool: isEnvProduction\r\n      ? shouldUseSourceMap\r\n        ? 'source-map'\r\n        : false\r\n      : isEnvDevelopment && 'cheap-module-source-map',\r\n    // These are the \"entry points\" to our application.\r\n    // This means they will be the \"root\" imports that are included in JS bundle.\r\n    entry: isEnvProduction ? [paths.appLibIndexJs] : [\r\n      // Include an alternative client for WebpackDevServer. A client's job is to\r\n      // connect to WebpackDevServer by a socket and get notified about changes.\r\n      // When you save a file, the client will either apply hot updates (in case\r\n      // of CSS changes), or refresh the page (in case of JS changes). When you\r\n      // make a syntax error, this client will display a syntax error overlay.\r\n      // Note: instead of the default WebpackDevServer client, we use a custom one\r\n      // to bring better experience for Create React App users. You can replace\r\n      // the line below with these two lines if you prefer the stock client:\r\n      // require.resolve('webpack-dev-server/client') + '?/',\r\n      // require.resolve('webpack/hot/dev-server'),\r\n      isEnvDevelopment &&\r\n        require.resolve('react-dev-utils/webpackHotDevClient'),\r\n      // Finally, this is your app's code:\r\n      paths.appIndexJs,\r\n      // We include the app code last so that if there is a runtime error during\r\n      // initialization, it doesn't blow up the WebpackDevServer client, and\r\n      // changing JS code would still trigger a refresh.\r\n    ].filter(Boolean),\r\n    output: {\r\n      // The build folder.\r\n      path: isEnvProduction ? paths.appBuild : undefined,\r\n      // Add /* filename */ comments to generated require()s in the output.\r\n      pathinfo: isEnvDevelopment,\r\n      // There will be one main bundle, and one file per asynchronous chunk.\r\n      // In development, it does not produce real files.\r\n      filename: isEnvProduction\r\n        ? 'index.js'\r\n        : isEnvDevelopment && 'static/js/bundle.js',\r\n      // TODO: remove this when upgrading to webpack 5\r\n      futureEmitAssets: true,\r\n      // There are also additional JS chunk files if you use code splitting.\r\n      chunkFilename: isEnvProduction\r\n        ? 'static/js/[name].[contenthash:8].chunk.js'\r\n        : isEnvDevelopment && 'static/js/[name].chunk.js',\r\n      // We inferred the \"public path\" (such as / or /my-project) from homepage.\r\n      // We use \"/\" in development.\r\n      publicPath: publicPath,\r\n      library: \"TfaChart\",\r\n      libraryTarget: 'umd',\r\n      umdNamedDefine: true,\r\n      // Point sourcemap entries to original disk location (format as URL on Windows)\r\n      devtoolModuleFilenameTemplate: isEnvProduction\r\n        ? info =>\r\n            path\r\n              .relative(paths.appSrcLib, info.absoluteResourcePath)\r\n              .replace(/\\\\/g, '/')\r\n        : isEnvDevelopment &&\r\n          (info => path.resolve(info.absoluteResourcePath).replace(/\\\\/g, '/')),\r\n      // Prevents conflicts when multiple Webpack runtimes (from different apps)\r\n      // are used on the same page.\r\n      jsonpFunction: `webpackJsonp${appPackageJson.name}`,\r\n    },\r\n    optimization: {\r\n      minimize: isEnvProduction,\r\n      minimizer: [\r\n        // This is only used in production mode\r\n        new TerserPlugin({\r\n          terserOptions: {\r\n            parse: {\r\n              // We want terser to parse ecma 8 code. However, we don't want it\r\n              // to apply any minification steps that turns valid ecma 5 code\r\n              // into invalid ecma 5 code. This is why the 'compress' and 'output'\r\n              // sections only apply transformations that are ecma 5 safe\r\n              // https://github.com/facebook/create-react-app/pull/4234\r\n              ecma: 8,\r\n            },\r\n            compress: {\r\n              ecma: 5,\r\n              warnings: false,\r\n              // Disabled because of an issue with Uglify breaking seemingly valid code:\r\n              // https://github.com/facebook/create-react-app/issues/2376\r\n              // Pending further investigation:\r\n              // https://github.com/mishoo/UglifyJS2/issues/2011\r\n              comparisons: false,\r\n              // Disabled because of an issue with Terser breaking valid code:\r\n              // https://github.com/facebook/create-react-app/issues/5250\r\n              // Pending further investigation:\r\n              // https://github.com/terser-js/terser/issues/120\r\n              inline: 2,\r\n            },\r\n            mangle: {\r\n              safari10: true,\r\n              keep_classnames: true,\r\n              keep_fnames: true,\r\n              module: true\r\n            },\r\n            output: {\r\n              ecma: 5,\r\n              comments: false,\r\n              // Turned on because emoji and regex is not minified properly using default\r\n              // https://github.com/facebook/create-react-app/issues/2488\r\n              ascii_only: true,\r\n            },\r\n          },\r\n          // Use multi-process parallel running to improve the build speed\r\n          // Default number of concurrent runs: os.cpus().length - 1\r\n          // Disabled on WSL (Windows Subsystem for Linux) due to an issue with Terser\r\n          // https://github.com/webpack-contrib/terser-webpack-plugin/issues/21\r\n          parallel: !isWsl,\r\n          // Enable file caching\r\n          cache: true,\r\n          sourceMap: shouldUseSourceMap,\r\n        }),\r\n        new webpack.BannerPlugin({ \r\n          banner: banner, \r\n          entryOnly: true \r\n        }),\r\n        new OptimizeCSSAssetsPlugin({\r\n          cssProcessorOptions: {\r\n            parser: safePostCssParser,\r\n            map: shouldUseSourceMap\r\n              ? {\r\n                  // `inline: false` forces the sourcemap to be output into a\r\n                  // separate file\r\n                  inline: false,\r\n                  // `annotation: true` appends the sourceMappingURL to the end of\r\n                  // the css file, helping the browser find the sourcemap\r\n                  annotation: true,\r\n                }\r\n              : false,\r\n          },\r\n        }),\r\n      ],\r\n      // Automatically split vendor and commons\r\n      // https://twitter.com/wSokra/status/969633336732905474\r\n      // https://medium.com/webpack/webpack-4-code-splitting-chunk-graph-and-the-splitchunks-optimization-be739a861366\r\n      splitChunks: {\r\n      //chunks: 'all',\r\n      cacheGroups: {\r\n        default: false,\r\n      }\r\n      },\r\n      // Keep the runtime chunk separated to enable long term caching\r\n      // https://twitter.com/wSokra/status/969679223278505985\r\n    runtimeChunk: false,\r\n    },\r\n    resolve: {\r\n      // This allows you to set a fallback for where Webpack should look for modules.\r\n      // We placed these paths second because we want `node_modules` to \"win\"\r\n      // if there are any conflicts. This matches Node resolution mechanism.\r\n      // https://github.com/facebook/create-react-app/issues/253\r\n      modules: ['node_modules', paths.appNodeModules].concat(\r\n        modules.additionalModulePaths || []\r\n      ),\r\n      // These are the reasonable defaults supported by the Node ecosystem.\r\n      // We also include JSX as a common component filename extension to support\r\n      // some tools, although we do not recommend using it, see:\r\n      // https://github.com/facebook/create-react-app/issues/290\r\n      // `web` extension prefixes have been added for better support\r\n      // for React Native Web.\r\n      extensions: paths.moduleFileExtensions\r\n        .map(ext => `.${ext}`)\r\n        .filter(ext => useTypeScript || !ext.includes('ts')),\r\n      alias: {\r\n        // Support React Native Web\r\n        // https://www.smashingmagazine.com/2016/08/a-glimpse-into-the-future-with-react-native-for-web/\r\n        'react-native': 'react-native-web',\r\n      },\r\n      plugins: [\r\n        // Adds support for installing with Plug'n'Play, leading to faster installs and adding\r\n        // guards against forgotten dependencies and such.\r\n        PnpWebpackPlugin,\r\n        // Prevents users from importing files from outside of src/ (or node_modules/).\r\n        // This often causes confusion because we only process files within src/ with babel.\r\n        // To fix this, we prevent you from importing files out of src/ -- if you'd like to,\r\n        // please link the files into your node_modules/ and let module-resolution kick in.\r\n        // Make sure your source files are compiled, as they will not be processed in any way.\r\n        new ModuleScopePlugin(paths.appSrc, [paths.appPackageJson]),\r\n      ],\r\n    },\r\n    resolveLoader: {\r\n      plugins: [\r\n        // Also related to Plug'n'Play, but this time it tells Webpack to load its loaders\r\n        // from the current package.\r\n        PnpWebpackPlugin.moduleLoader(module),\r\n\r\n      ],\r\n    },\r\n    module: {\r\n      strictExportPresence: true,\r\n      rules: [\r\n        // Disable require.ensure as it's not a standard language feature.\r\n        { parser: { requireEnsure: false } },\r\n\r\n        // First, run the linter.\r\n        // It's important to do this before Babel processes the JS.\r\n        {\r\n          test: /\\.(js|mjs|jsx|ts|tsx)$/,\r\n          enforce: 'pre',\r\n          use: [\r\n            {\r\n              options: {\r\n                formatter: require.resolve('react-dev-utils/eslintFormatter'),\r\n                eslintPath: require.resolve('eslint'),\r\n                resolvePluginsRelativeTo: __dirname,\r\n                \r\n              },\r\n              loader: require.resolve('eslint-loader'),\r\n            },\r\n          ],\r\n        include: paths.appSrcLib,\r\n        },\r\n        {\r\n          // \"oneOf\" will traverse all following loaders until one will\r\n          // match the requirements. When no loader matches it will fall\r\n          // back to the \"file\" loader at the end of the loader list.\r\n          oneOf: [\r\n            // \"url\" loader works like \"file\" loader except that it embeds assets\r\n            // smaller than specified limit in bytes as data URLs to avoid requests.\r\n            // A missing `test` is equivalent to a match.\r\n            {\r\n              test: [/\\.bmp$/, /\\.gif$/, /\\.jpe?g$/, /\\.png$/],\r\n              loader: require.resolve('url-loader'),\r\n              options: {\r\n                limit: imageInlineSizeLimit,\r\n                name: 'static/media/[name].[hash:8].[ext]',\r\n              },\r\n            },\r\n            // Process application JS with Babel.\r\n            // The preset includes JSX, Flow, TypeScript, and some ESnext features.\r\n            {\r\n              test: /\\.(js|mjs|jsx|ts|tsx)$/,\r\n              include: paths.appSrcLib,\r\n              loader: require.resolve('babel-loader'),\r\n              options: {\r\n                customize: require.resolve(\r\n                  'babel-preset-react-app/webpack-overrides'\r\n                ),\r\n                \r\n                plugins: [\r\n                  [\r\n                    require.resolve('babel-plugin-named-asset-import'),\r\n                    {\r\n                      loaderMap: {\r\n                        svg: {\r\n                          ReactComponent: '@svgr/webpack?-prettier,-svgo,+ref![path]',\r\n                        },\r\n                      },\r\n                    },\r\n                  ],\r\n                ],\r\n                // This is a feature of `babel-loader` for webpack (not Babel itself).\r\n                // It enables caching results in ./node_modules/.cache/babel-loader/\r\n                // directory for faster rebuilds.\r\n                cacheDirectory: true,\r\n                cacheCompression: isEnvProduction,\r\n                compact: isEnvProduction,\r\n              },\r\n            },\r\n            // Process any JS outside of the app with Babel.\r\n            // Unlike the application JS, we only compile the standard ES features.\r\n            {\r\n              test: /\\.(js|mjs)$/,\r\n              exclude: /@babel(?:\\/|\\\\{1,2})runtime/,\r\n              loader: require.resolve('babel-loader'),\r\n              options: {\r\n                babelrc: false,\r\n                configFile: false,\r\n                compact: false,\r\n                presets: [\r\n                  [\r\n                    require.resolve('babel-preset-react-app/dependencies'),\r\n                    { helpers: true },\r\n                  ],\r\n                  \"@babel/preset-env\",\r\n                  \"@babel/preset-react\"\r\n                ],\r\n                plugins: [\r\n                  [\r\n                    \"@babel/plugin-proposal-class-properties\"\r\n                  ]\r\n                ],\r\n                cacheDirectory: true,\r\n                cacheCompression: isEnvProduction,\r\n                \r\n                // If an error happens in a package, it's possible to be\r\n                // because it was compiled. Thus, we don't want the browser\r\n                // debugger to show the original code. Instead, the code\r\n                // being evaluated would be much more helpful.\r\n                sourceMaps: false,\r\n              },\r\n            },\r\n            // \"postcss\" loader applies autoprefixer to our CSS.\r\n            // \"css\" loader resolves paths in CSS and adds assets as dependencies.\r\n            // \"style\" loader turns CSS into JS modules that inject <style> tags.\r\n            // In production, we use MiniCSSExtractPlugin to extract that CSS\r\n            // to a file, but in development \"style\" loader enables hot editing\r\n            // of CSS.\r\n            // By default we support CSS Modules with the extension .module.css\r\n            {\r\n              test: cssRegex,\r\n              exclude: cssModuleRegex,\r\n              use: getStyleLoaders({\r\n                importLoaders: 1,\r\n                sourceMap: isEnvProduction && shouldUseSourceMap,\r\n              }),\r\n              // Don't consider CSS imports dead code even if the\r\n              // containing package claims to have no side effects.\r\n              // Remove this when webpack adds a warning or an error for this.\r\n              // See https://github.com/webpack/webpack/issues/6571\r\n              sideEffects: true,\r\n            },\r\n            // Adds support for CSS Modules (https://github.com/css-modules/css-modules)\r\n            // using the extension .module.css\r\n            {\r\n              test: cssModuleRegex,\r\n              use: getStyleLoaders({\r\n                importLoaders: 1,\r\n                sourceMap: isEnvProduction && shouldUseSourceMap,\r\n                modules: true,\r\n                getLocalIdent: getCSSModuleLocalIdent,\r\n              }),\r\n            },\r\n            // Opt-in support for SASS (using .scss or .sass extensions).\r\n            // By default we support SASS Modules with the\r\n            // extensions .module.scss or .module.sass\r\n            {\r\n              test: sassRegex,\r\n              exclude: sassModuleRegex,\r\n              use: getStyleLoaders(\r\n                {\r\n                  importLoaders: 2,\r\n                  sourceMap: isEnvProduction && shouldUseSourceMap,\r\n                },\r\n                'sass-loader'\r\n              ),\r\n              // Don't consider CSS imports dead code even if the\r\n              // containing package claims to have no side effects.\r\n              // Remove this when webpack adds a warning or an error for this.\r\n              // See https://github.com/webpack/webpack/issues/6571\r\n              sideEffects: true,\r\n            },\r\n            // Adds support for CSS Modules, but using SASS\r\n            // using the extension .module.scss or .module.sass\r\n            {\r\n              test: sassModuleRegex,\r\n              use: getStyleLoaders(\r\n                {\r\n                  importLoaders: 2,\r\n                  sourceMap: isEnvProduction && shouldUseSourceMap,\r\n                  modules: true,\r\n                  getLocalIdent: getCSSModuleLocalIdent,\r\n                },\r\n                'sass-loader'\r\n              ),\r\n            },\r\n            // \"file\" loader makes sure those assets get served by WebpackDevServer.\r\n            // When you `import` an asset, you get its (virtual) filename.\r\n            // In production, they would get copied to the `build` folder.\r\n            // This loader doesn't use a \"test\" so it will catch all modules\r\n            // that fall through the other loaders.\r\n            {\r\n              loader: require.resolve('file-loader'),\r\n              // Exclude `js` files to keep \"css\" loader working as it injects\r\n              // its runtime that would otherwise be processed through \"file\" loader.\r\n              // Also exclude `html` and `json` extensions so they get processed\r\n              // by webpacks internal loaders.\r\n              exclude: [/\\.(js|mjs|jsx|ts|tsx)$/, /\\.html$/, /\\.json$/],\r\n              options: {\r\n                name: 'static/media/[name].[hash:8].[ext]',\r\n              },\r\n            },\r\n            // ** STOP ** Are you adding a new loader?\r\n            // Make sure to add the new loader(s) before the \"file\" loader.\r\n          ],\r\n        },\r\n      ],\r\n    },\r\n    plugins: [\r\n      new webpack.ProvidePlugin({\r\n        // $: \"jquery\",\r\n        // jQuer: 'jquery',\r\n        // 'window.jQuery': 'jquery',\r\n        // \"window.$\": \"jquery\"\r\n      }),\r\n      isEnvDevelopment &&\r\n      // Generates an `index.html` file with the <script> injected.\r\n      new HtmlWebpackPlugin(\r\n        Object.assign(\r\n          {},\r\n          {\r\n            inject: true,\r\n            template: paths.appHtml,\r\n          },\r\n          isEnvProduction\r\n            ? {\r\n                minify: {\r\n                  removeComments: true,\r\n                  collapseWhitespace: true,\r\n                  removeRedundantAttributes: true,\r\n                  useShortDoctype: true,\r\n                  removeEmptyAttributes: true,\r\n                  removeStyleLinkTypeAttributes: true,\r\n                  keepClosingSlash: true,\r\n                  minifyJS: true,\r\n                  minifyCSS: true,\r\n                  minifyURLs: true,\r\n                },\r\n              }\r\n            : undefined\r\n        )\r\n      ),\r\n      // Inlines the webpack runtime script. This script is too small to warrant\r\n      // a network request.\r\n      isEnvProduction &&\r\n        shouldInlineRuntimeChunk &&\r\n        new InlineChunkHtmlPlugin(HtmlWebpackPlugin, [/runtime~.+[.]js/]),\r\n      // Makes some environment variables available in index.html.\r\n      // The public URL is available as %PUBLIC_URL% in index.html, e.g.:\r\n      // <link rel=\"shortcut icon\" href=\"%PUBLIC_URL%/favicon.ico\">\r\n      // In production, it will be an empty string unless you specify \"homepage\"\r\n      // in `package.json`, in which case it will be the pathname of that URL.\r\n      // In development, this will be an empty string.\r\n      new InterpolateHtmlPlugin(HtmlWebpackPlugin, env.raw),\r\n      // This gives some necessary context to module not found errors, such as\r\n      // the requesting resource.\r\n      new ModuleNotFoundPlugin(paths.appPath),\r\n      // Makes some environment variables available to the JS code, for example:\r\n      // if (process.env.NODE_ENV === 'production') { ... }. See `./env.js`.\r\n      // It is absolutely essential that NODE_ENV is set to production\r\n      // during a production build.\r\n      // Otherwise React will be compiled in the very slow development mode.\r\n      new webpack.DefinePlugin(env.stringified),\r\n      // This is necessary to emit hot updates (currently CSS only):\r\n      isEnvDevelopment && new webpack.HotModuleReplacementPlugin(),\r\n      // Watcher doesn't work well if you mistype casing in a path so we use\r\n      // a plugin that prints an error when you attempt to do this.\r\n      // See https://github.com/facebook/create-react-app/issues/240\r\n      isEnvDevelopment && new CaseSensitivePathsPlugin(),\r\n      // If you require a missing module and then `npm install` it, you still have\r\n      // to restart the development server for Webpack to discover it. This plugin\r\n      // makes the discovery automatic so you don't have to restart.\r\n      // See https://github.com/facebook/create-react-app/issues/186\r\n      isEnvDevelopment &&\r\n        new WatchMissingNodeModulesPlugin(paths.appNodeModules),\r\n      isEnvProduction &&\r\n        new MiniCssExtractPlugin({\r\n          // Options similar to the same options in webpackOptions.output\r\n          // both options are optional\r\n          filename: 'index.css',\r\n          chunkFilename: 'index.[contenthash:8].chunk.css',\r\n        }),\r\n      // Generate a manifest file which contains a mapping of all asset filenames\r\n      // to their corresponding output file so that tools can pick it up without\r\n      // having to parse `index.html`.\r\n    /*new ManifestPlugin({\r\n        fileName: 'asset-manifest.json',\r\n        publicPath: publicPath,\r\n        generate: (seed, files) => {\r\n          const manifestFiles = files.reduce(function(manifest, file) {\r\n            manifest[file.name] = file.path;\r\n            return manifest;\r\n          }, seed);\r\n\r\n          return {\r\n            files: manifestFiles,\r\n          };\r\n        },\r\n      }),*/\r\n      // Moment.js is an extremely popular library that bundles large locale files\r\n      // by default due to how Webpack interprets its code. This is a practical\r\n      // solution that requires the user to opt into importing specific locales.\r\n      // https://github.com/jmblog/how-to-optimize-momentjs-with-webpack\r\n      // You can remove this if you don't use Moment.js:\r\n      new webpack.IgnorePlugin(/^\\.\\/locale$/, /moment$/),\r\n      // Generate a service worker script that will precache, and keep up to date,\r\n      // the HTML & assets that are part of the Webpack build.\r\n      /*isEnvProduction &&\r\n        new WorkboxWebpackPlugin.GenerateSW({\r\n          clientsClaim: true,\r\n          exclude: [/\\.map$/, /asset-manifest\\.json$/],\r\n          importWorkboxFrom: 'cdn',\r\n          navigateFallback: publicUrl + '/index.html',\r\n          navigateFallbackBlacklist: [\r\n            // Exclude URLs starting with /_, as they're likely an API call\r\n            new RegExp('^/_'),\r\n            // Exclude URLs containing a dot, as they're likely a resource in\r\n            // public/ and not a SPA route\r\n            new RegExp('/[^/]+\\\\.[^/]+$'),\r\n          ],\r\n        }),*/\r\n      // TypeScript type checking\r\n      useTypeScript &&\r\n        new ForkTsCheckerWebpackPlugin({\r\n          typescript: resolve.sync('typescript', {\r\n            basedir: paths.appNodeModules,\r\n          }),\r\n          async: isEnvDevelopment,\r\n          useTypescriptIncrementalApi: true,\r\n          checkSyntacticErrors: true,\r\n          resolveModuleNameModule: process.versions.pnp\r\n            ? `${__dirname}/pnpTs.js`\r\n            : undefined,\r\n          resolveTypeReferenceDirectiveModule: process.versions.pnp\r\n            ? `${__dirname}/pnpTs.js`\r\n            : undefined,\r\n          tsconfig: paths.appTsConfig,\r\n          reportFiles: [\r\n            '**',\r\n            '!**/__tests__/**',\r\n            '!**/?(*.)(spec|test).*',\r\n            '!**/src/setupProxy.*',\r\n            '!**/src/setupTests.*',\r\n          ],\r\n          watch: paths.appSrcLib,\r\n          silent: true,\r\n          // The formatter is invoked directly in WebpackDevServerUtils during development\r\n          formatter: isEnvProduction ? typescriptFormatter : undefined,\r\n        }),\r\n    ].filter(Boolean),\r\n    // Some libraries import Node modules but don't use them in the browser.\r\n    // Tell Webpack to provide empty mocks for them so importing them works.\r\n    node: {\r\n      module: 'empty',\r\n      dgram: 'empty',\r\n      dns: 'mock',\r\n      fs: 'empty',\r\n      http2: 'empty',\r\n      net: 'empty',\r\n      tls: 'empty',\r\n      child_process: 'empty',\r\n    },\r\n    // Turn off performance processing because we utilize\r\n    // our own hints via the FileSizeReporter\r\n    performance: false,\r\n  };\r\n};\r\n"],"file":"webpack.config.dev.js"}